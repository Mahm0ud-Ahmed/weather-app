import 'package:weather_app/src/modules/forecast/entity/hour_info.dart';
import 'package:weather_app/src/modules/home/model/weather_info_model.dart';

class HourInfoModel extends HourInfo {
  HourInfoModel({
    double? windChillC,
    double? windChillF,
    double? heatIndexC,
    double? heatIndexF,
    double? dewPointC,
    double? dewPointF,
    var willItRain,
    var chanceOfRain,
    var willItSnow,
    var chanceOfSnow,
    String? time,
    double? tempC,
    double? tempF,
    int? isDay,
    ConditionModel? conditionModel,
    double? windMph,
    double? windKph,
    var windDegree,
    String? windDir,
    double? pressureMb,
    double? pressureIn,
    double? precipMm,
    double? precipIn,
    var humidity,
    var cloud,
    double? feelslikeC,
    double? feelslikeF,
    double? visKm,
    double? visMiles,
    double? uv,
    double? gustMph,
    double? gustKph,
  }) : super(
          windChillC: windChillC,
          windChillF: windChillF,
          heatIndexC: heatIndexC,
          heatIndexF: heatIndexF,
          dewPointC: dewPointC,
          dewPointF: dewPointF,
          willItRain: willItRain,
          chanceOfRain: chanceOfRain,
          willItSnow: willItSnow,
          chanceOfSnow: chanceOfSnow,
          time: time,
          tempC: tempC,
          tempF: tempF,
          isDay: isDay,
          condition: conditionModel,
          windMph: windMph,
          windKph: windKph,
          degree: windDegree,
          windDir: windDir,
          pressureMb: pressureMb,
          pressureIn: pressureIn,
          precipIn: precipIn,
          precipMm: precipMm,
          humidity: humidity,
          cloud: cloud,
          feelsLikeC: feelslikeC,
          feelsLikeF: feelslikeF,
          visKm: visKm,
          visMiles: visMiles,
          gustMph: gustMph,
          gustKph: gustKph,
          uv: uv,
        );

  factory HourInfoModel.fromJson(Map<String, dynamic> json) {
    return HourInfoModel(
      windChillC: json['windchill_c'],
      windChillF: json['windchill_f'],
      heatIndexC: json['heatindex_c'],
      heatIndexF: json['heatindex_f'],
      dewPointC: json['dewpoint_c'],
      dewPointF: json['dewpoint_f'],
      willItRain: json['will_it_rain'],
      chanceOfRain: json['chance_of_rain'],
      willItSnow: json['will_it_snow'],
      chanceOfSnow: json['chance_of_snow'],
      time: json['time'],
      tempC: json['temp_c'],
      tempF: json['temp_f'],
      isDay: json['is_day'],
      conditionModel: ConditionModel.fromJson(json['condition']),
      windMph: json['wind_mph'],
      windKph: json['wind_kph'],
      windDegree: json['wind_degree'],
      windDir: json['wind_dir'],
      pressureMb: json['pressure_mb'],
      pressureIn: json['pressure_in'],
      precipMm: json['precip_mm'],
      precipIn: json['precip_in'],
      humidity: json['humidity'],
      cloud: json['cloud'],
      feelslikeC: json['feelslike_c'],
      feelslikeF: json['feelslike_f'],
      visKm: json['vis_km'],
      visMiles: json['vis_miles'],
      gustMph: json['gust_mph'],
      gustKph: json['gust_kph'],
      uv: json['uv'],
    );
  }
}
